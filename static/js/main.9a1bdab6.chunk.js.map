{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","label","value","FeedbackOptions","options","onClick","map","option","button","type","name","Section","title","children","section","Notification","message","notification","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Number","toFixed","e","target","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,MAAQ,4B,oBCA5DD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,aAAe,qC,4ICuClBC,EArCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,oBAAGC,UAAWC,IAAEC,MAAhB,kBAEE,sBAAMF,UAAWC,IAAEE,MAAnB,SAA2BR,OAG7B,oBAAGK,UAAWC,IAAEC,MAAhB,qBAEE,sBAAMF,UAAWC,IAAEE,MAAnB,SAA2BP,OAG7B,oBAAGI,UAAWC,IAAEC,MAAhB,iBAEE,sBAAMF,UAAWC,IAAEE,MAAnB,SAA2BN,OAG7B,oBAAGG,UAAWC,IAAEC,MAAhB,mBAEE,sBAAMF,UAAWC,IAAEE,MAAnB,SAA2BL,OAG7B,oBAAGE,UAAWC,IAAEC,MAAhB,+BAEE,uBAAMF,UAAWC,IAAEE,MAAnB,UAA2BJ,EAA3B,c,gBCDSK,EAvBS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACER,UAAWC,IAAEQ,OACbC,KAAK,SACLC,KAAMH,EAENF,QAASA,EALX,SAOGE,GAHIA,S,gBCIAI,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASd,UAAWC,IAAEc,QAAtB,UACE,6BAAKF,IACJC,M,gBCCUE,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGjB,UAAWC,IAAEiB,aAAhB,SAA+BD,KCgElBE,MA9Df,WACE,MAAwBC,mBAAS,GAAjC,mBAAOzB,EAAP,KAAa0B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOxB,EAAP,KAAgB0B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOvB,EAAP,KAAY0B,EAAZ,KAoBMC,EAAqB,WACzB,OAAO7B,EAAOC,EAAUC,GAOpBC,EAAQ2B,OAAOD,KACfzB,EAAqB0B,QAJjB9B,EAAO6B,IAAwB,KAKLE,QAAQ,IAG5C,OACE,qCACE,cAAC,EAAD,CAASb,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,QAAS,CAAC,OAAQ,UAAW,OAC7BC,QApCgB,SAAAqB,GAEtB,OADiBA,EAAEC,OAAXjB,MAEN,IAAK,OACHU,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHP,GAAW,SAAAO,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHN,GAAO,SAAAM,GAAS,OAAIA,EAAY,WA8BjC/B,EAAQ,EACP,cAAC,EAAD,CAAcmB,QAAQ,sBAEtB,cAAC,EAAD,CAASJ,MAAM,aAAf,SACE,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,UCtDhC+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9a1bdab6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Statistics_label__2Eexi\",\"value\":\"Statistics_value__14MPB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2BuWb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3QZ3Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2-z68\"};","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    <p className={s.label}>\r\n      Good:\r\n      <span className={s.value}>{good}</span>\r\n    </p>\r\n\r\n    <p className={s.label}>\r\n      Neutral:\r\n      <span className={s.value}>{neutral}</span>\r\n    </p>\r\n\r\n    <p className={s.label}>\r\n      Bad:\r\n      <span className={s.value}>{bad}</span>\r\n    </p>\r\n\r\n    <p className={s.label}>\r\n      Total:\r\n      <span className={s.value}>{total}</span>\r\n    </p>\r\n\r\n    <p className={s.label}>\r\n      Positive feedback:\r\n      <span className={s.value}>{positivePercentage}%</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onClick }) => {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          name={option}\r\n          key={option}\r\n          onClick={onClick}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={s.section}>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={s.notification}>{message}</p>\r\n);\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import { useState } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handlerFeedback = e => {\n    const { name } = e.target;\n    switch (name) {\n      case 'Good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'Neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'Bad':\n        setBad(prevState => prevState + 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return (good / countTotalFeedback()) * 100;\n  };\n\n  const total = Number(countTotalFeedback());\n  const positivePercentage = Number(\n    countPositiveFeedbackPercentage().toFixed(0),\n  );\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['Good', 'Neutral', 'Bad']}\n          onClick={handlerFeedback}\n        />\n      </Section>\n\n      {total < 1 ? (\n        <Notification message=\"No feedback given\" />\n      ) : (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}